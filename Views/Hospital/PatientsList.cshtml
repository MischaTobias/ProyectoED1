@*@model IEnumerable<ProyectoED1.Models.PatientModel>*@
@model PagedList.IPagedList<ProyectoED1.Models.PatientStructure>

@{
    ViewBag.Title = "PatientsList";
}



<h2>Lista de pacientes</h2>

<br />
<h5><strong>Búsqueda de pacientes</strong></h5>
<p>Por favor seleccione el criterio por el cual desea buscar e introduzca el valor buscado, luego de ello presione "Buscar"</p>

@* Shows an error that's contained at TempData["Error] *@
<p style="color:darkred"><strong>@TempData["Error"]</strong></p>

@* Form that sends the info to the PatientsListview *@
@using (Html.BeginForm("PatientsList", "Hospital", FormMethod.Get))
{
    <em><strong>Criterios:</strong></em>
@* DropDownList that shows the search criteria. *@
    <select class="form-control" id="criteria" name="criteria">
        <option>Seleccionar Criterio</option>
        <option>Nombre</option>
        <option>Apellido</option>
        <option>CUI/No. DPI</option>
    </select>
    //Obtenido de: https://www.tutorialsteacher.com/mvc/htmlhelper-dropdownlist-dropdownlistfor
    <br />
    @Html.TextBox("search")
    <input type="submit" name="value" value="Buscar" />
}

@* Display for the patient's info contained in patients hash *@
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().CUI)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Hospital)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CUI)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Hospital)
            </td>
        </tr>
    }

</table>

@* Paged List actions *@
<div>
    Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    de @Model.PageCount

    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("<<", "PantientsList", new { page = 1 })
        @Html.Raw(" ");
        @Html.ActionLink("< Prev", "PatientsList", new { page = Model.PageNumber - 1 })
    }
    else
    {
        @:<<
        @Html.Raw(" ");
        @:< Anterior
    }

    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next >", "PatientsList", new { page = Model.PageNumber + 1 })
        @Html.Raw(" ");
        @Html.ActionLink(">>", "PatientsList", new { page = Model.PageCount })
    }
    else
    {
        @:Siguiente >
        @Html.Raw("")
        @:>>
    }
</div>
